I";3<p>의사 결정트리로 독일 은행의 대출 채무 이행 여부를 분석해볼까합니다. 데이터는 <a href="https://github.com/KEJdev/DataSet/tree/master/DataSet">여기</a>에서 다운 받을 수 있습니다. 그리고 코드는 <a href="https://github.com/KEJdev/R-Example">여기</a> GitHub에서 확인 할 수 있습니다.</p>

<h2 id="dataset">DataSet</h2>

<p>데이터 라벨은 default 변수이며, yes는 대출금 미상환, no는 대출금을 상환했다는 뜻입니다.</p>

<p><img src="/public/img/credit.png" alt="webcredit1" width="20%" height="20%" class="center" /></p>

<p>대부분의 컬럼은 이름에서부터 알 수 있기 때문에 다루진 않고, 알기 어려운 컬럼에 대해 설명을 조금 설명을 하자면 아래와 같습니다.</p>

<ul>
  <li>checking_balance  예금 계좌</li>
  <li>savings_balance 적금 계좌</li>
  <li>amount 대출 금액</li>
</ul>

<p>데이터에서 저 컬럼이 왜 있는지에 대해 분석을 조금 하게 되면, 데이터 분석시에 조금 수월할 수 있습니다. 예금계좌와 적금계좌가 있는 이유는 대출 신청자의 예금계좌와 적금계좌의 예금 정도를 확인해서 예금액이 많을수록 대출이 안전하다고 가정을 지을 수 있기 때문에 존재하는 컬럼입니다.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">summary</span><span class="p">(</span><span class="n">credit</span><span class="o">$</span><span class="n">amount</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>위와 같이 summary를 하게 되면 대출 금액의 구성도를 대충 파악 할 수 있습니다. 대출금액이 250 마르크에서 18424마르크로 구성되어 있음을 알 수 있습니다.</p>

<p>여기서 조금 더 나아가 대출금 상환을 한 사람과 안한사람의 비율을 잠깐 보면 아래와 같습니다.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">prop.table</span><span class="p">(</span><span class="n">table</span><span class="p">(</span><span class="n">credit</span><span class="o">$</span><span class="n">default</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<p>70%정도가 대출금을 상환했다는 것을 알 수 있습니다.</p>

<p><img src="/public/img/credit2.png" alt="credit2" width="10%" height="10%" class="center" /></p>

<p>과거 데이터를 분석해보니 대출금 상환 불이행자가 30%나 되니 앞으로 30%이내로 떨어트리는게 은행의 목표가 되겠금 model를 생성해보겠습니다.</p>

<p>우선 데이터를 shuffle 시키고 훈련데이터와 테스트 데이터를 9:1 비율로 나누겠습니다. 보통은 7:3 비율로 데이터를 나누지만, 어떤 비율을 할지는 자신의 선택이므로 다른 비율로 하셔도 괜찮습니다.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">set.seed</span><span class="p">(</span><span class="m">1</span><span class="p">)</span><span class="w">
</span><span class="n">train_cnt</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">round</span><span class="p">(</span><span class="m">0.9</span><span class="o">*</span><span class="nf">dim</span><span class="p">(</span><span class="n">credit</span><span class="p">)[</span><span class="m">1</span><span class="p">])</span><span class="w">
</span><span class="n">train_index</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sample</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="nf">dim</span><span class="p">(</span><span class="n">credit</span><span class="p">)[</span><span class="m">1</span><span class="p">],</span><span class="w"> </span><span class="n">train_cnt</span><span class="p">,</span><span class="w"> </span><span class="n">replace</span><span class="o">=</span><span class="nb">F</span><span class="p">)</span><span class="w">
</span><span class="n">credit_train</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">credit</span><span class="p">[</span><span class="n">train_index</span><span class="p">,</span><span class="w"> </span><span class="p">]</span><span class="w">
</span><span class="n">credit_test</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">credit</span><span class="p">[</span><span class="o">-</span><span class="n">train_index</span><span class="p">,</span><span class="w"> </span><span class="p">]</span><span class="w">
</span></code></pre></div></div>

<p>또는</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># train_cnt를 쓰지 않고</span><span class="w">
</span><span class="n">train_index</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sample</span><span class="p">(</span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="n">nrow</span><span class="p">(</span><span class="n">credit</span><span class="p">),</span><span class="w"> </span><span class="n">prob</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">0.9</span><span class="p">,</span><span class="w"> </span><span class="m">0.1</span><span class="p">),</span><span class="w"> </span><span class="n">replace</span><span class="o">=</span><span class="nb">T</span><span class="p">)</span><span class="w">

</span><span class="n">credit_train</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">credit</span><span class="p">[</span><span class="n">train_index</span><span class="o">==</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="p">]</span><span class="w">
</span><span class="n">credit_test</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">credit</span><span class="p">[</span><span class="n">train_index</span><span class="o">==</span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="p">]</span><span class="w">
</span></code></pre></div></div>

<h2 id="c50-model">C5.0 Model</h2>

<p>의사 결정 알고리즘 중 C5.0 이라는 알고리즘을 적용하여 예측 모델을 생성해보겠습니다.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 패키지 설치</span><span class="w">
</span><span class="n">install.packages</span><span class="p">(</span><span class="s2">"C50"</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">C50</span><span class="p">)</span><span class="w">

</span><span class="c1"># 의사결정트리 C5.0 알고리즘을 적용한 모델 만들기</span><span class="w">
</span><span class="n">credit_model</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">C50</span><span class="p">(</span><span class="n">credit_train</span><span class="p">[</span><span class="m">-17</span><span class="p">],</span><span class="w"> </span><span class="n">credit_train</span><span class="p">[</span><span class="m">17</span><span class="p">])</span><span class="w">
</span><span class="c1">#                     라벨을 뺀 전체 컬럼   라벨 컬럼</span><span class="w">
</span></code></pre></div></div>

<p>그리고 모델을 적용하여 예측합니다.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">credit_result</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">predict</span><span class="p">(</span><span class="n">credit_model</span><span class="p">,</span><span class="w"> </span><span class="n">credit_test</span><span class="p">)</span><span class="w"> 
</span></code></pre></div></div>

<p>이번엔 위에서 만든 결과를 사용하여 이원 교차표를 작성하겠습니다.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">gmodels</span><span class="p">)</span><span class="w">
</span><span class="n">CrossTable</span><span class="p">(</span><span class="n">credit_result</span><span class="p">,</span><span class="w"> </span><span class="n">credit_test</span><span class="p">[,</span><span class="w"> </span><span class="m">17</span><span class="p">])</span><span class="w">
</span></code></pre></div></div>

<p><img src="/public/img/credit3.png" alt="credit3" width="40%" height="40%" class="center" /></p>

<p>표를 보면 알 수 있듯이 채무 이행을 안했는데, 채무 이행을 했다고 나온 경우를 볼 수 있습니다. 채무 이행으로 나왔으나 불이행한 사람이 14명이나 있었으므로 정확도를 올리고 오류율 14명을 줄일 수 있도록 모델의 성능을 올려보겠습니다.</p>

<h2 id="앙상블">앙상블</h2>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">credit_model2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">C5.0</span><span class="p">(</span><span class="n">credit_train</span><span class="p">[,</span><span class="m">-17</span><span class="p">],</span><span class="w"> </span><span class="n">credit_train</span><span class="p">[,</span><span class="m">17</span><span class="p">],</span><span class="w"> </span><span class="n">trials</span><span class="o">=</span><span class="m">10</span><span class="p">)</span><span class="w">
</span><span class="n">credit_result2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">predict</span><span class="p">(</span><span class="n">credit_model2</span><span class="p">,</span><span class="w"> </span><span class="n">credit_test</span><span class="p">[,</span><span class="m">-17</span><span class="p">])</span><span class="w">  
</span><span class="n">CrossTable</span><span class="p">(</span><span class="n">credit_result2</span><span class="p">,</span><span class="w"> </span><span class="n">credit_test</span><span class="p">[,</span><span class="w"> </span><span class="m">17</span><span class="p">])</span><span class="w">
</span></code></pre></div></div>

<p><img src="/public/img/credit4.png" alt="credit4" width="40%" height="40%" class="center" /></p>

<p>성능이 월등하게 개선되진 않았지만, 결정 트리 하나의 모델로만으로도 성능을 개선할 수 있음을 알 수 있었습니다.</p>

<p>여기서 만약 성능 개선을 더 해보고 싶다면, 아래와 같이 앙상블을 이용하여 모델을 개선할 수 있습니다. (앙상블에 대한 자세한 설명은 다음에..)</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">install.packages</span><span class="p">(</span><span class="s2">"caret"</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">caret</span><span class="p">)</span><span class="w">
</span><span class="n">set.seed</span><span class="p">(</span><span class="m">300</span><span class="p">)</span><span class="w">

</span><span class="n">m</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">train</span><span class="p">(</span><span class="n">default</span><span class="w"> </span><span class="o">~</span><span class="n">.</span><span class="p">,</span><span class="w"> </span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">credit</span><span class="w"> </span><span class="p">,</span><span class="w"> </span><span class="n">method</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"C5.0"</span><span class="w"> </span><span class="p">)</span><span class="w">

</span><span class="n">p</span><span class="o">&lt;-</span><span class="n">predict</span><span class="p">(</span><span class="n">m</span><span class="p">,</span><span class="w"> </span><span class="n">credit</span><span class="p">)</span><span class="w">
</span><span class="n">table</span><span class="p">(</span><span class="n">p</span><span class="p">,</span><span class="w"> </span><span class="n">credit</span><span class="o">$</span><span class="n">default</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><img src="/public/img/credit5.png" alt="credit5" width="70%" height="70%" class="center" /></p>

<p>정확도 99.8%까지 올릴 수 있음을 알 수 있습니다.</p>
:ET